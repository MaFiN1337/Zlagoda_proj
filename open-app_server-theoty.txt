
	http://localhost/phpmyadmin/index.php?lang=en
	http://localhost/dashboard/ http://localhost:80 -  Apache
	http://localhost:8080/ - Tomcate
	XAMPP – це безкоштовний і відкритий програмний пакет, який дозволяє легко встановити на вашому комп'ютері локальний веб-сервер. 
	 У пакет XAMPP входять всі необхідні компоненти для створення веб-сайту:
	 У пакет XAMPP входять всі необхідні компоненти для створення веб-сайту:
	Apache: Веб-сервер, який обробляє запити користувачів до вашого сайту.
	MySQL: Система управління базами даних, яка зберігає дані вашого сайту.
	PHP: Популярна мова програмування для створення динамічних веб-сайтів.
	Perl: Ще одна мова програмування, яка часто використовується разом з PHP.
	phpMyAdmin: Графічний інтерфейс для управління базами даних MySQL, що спрощує роботу з ними.
	
	Start application:
	XAMPP: start tomcate; mysql
	open app by link: http://localhost:8080/restaurant_war/
	
	Що таке Apache?
	Apache – це один з найпопулярніших і найстаріших веб-серверів у світі. 
	Це програмне забезпечення, яке відповідає за обробку запитів користувачів до веб-сайтів.
	Коли ви вводите адресу веб-сайту в браузері, саме веб-сервер (в даному випадку Apache) приймає цей запит, 
	обробляє його і відправляє вам відповідь – тобто сторінку, яку ви бачите.
	Простіше кажучи:
	Уявіть собі веб-сайт як будинок. 
	Apache – це дверний дзвоник і людина, яка відкриває двері.
	Коли ви дзвоните у дверний дзвоник (відправляєте запит в браузері), 
	людина (Apache) відкриває двері і показує вам кімнати в будинку (сторінки веб-сайту).
	
	Apache Tomcat – це відкритий програмний продукт, який слугує веб-сервером і контейнером сервлетів. 
	Це означає, що він не тільки обслуговує статичні веб-сторінки (як це робить базовий Apache), 
	але й може запускати динамічні веб-додатки, написані на мові Java, за допомогою технологій сервлетів і JSP (JavaServer Pages).
	Простіше кажучи: Якщо Apache – це будинок, 
	то Tomcat – це будинок з додатковими кімнатами, де можуть жити і працювати різні програми (сервлети і JSP). 
	Ці програми можуть виконувати більш складні завдання, такі як обробка форм, доступ до бази даних, генерація динамічного контенту тощо.